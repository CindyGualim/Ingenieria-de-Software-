{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\OneDrive\\\\Documentos\\\\GitHub\\\\LOGIN\\\\Ingenieria-de-Software-\\\\reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Button from './components/Button';\nimport Footer from './components/Footer';\nimport Register from './Register';\nimport { handleRegisterClick, handleLoginClick } from './ContainerActions';\n\n// Custom Input Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  type,\n  placeholder,\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(\"input\", {\n  type: type,\n  placeholder: placeholder,\n  value: value,\n  onChange: onChange\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = Input;\nfunction App() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showRegisterView, setShowRegisterView] = useState(false);\n  useEffect(() => {\n    const container = document.getElementById('container');\n    const registerBtn = document.getElementById('register');\n    const loginBtn = document.getElementById('login');\n    if (container && registerBtn && loginBtn) {\n      const handleRegisterClick = () => {\n        container.classList.add(\"active\");\n      };\n      const handleLoginClick = () => {\n        container.classList.remove(\"active\");\n      };\n      registerBtn.addEventListener('click', handleRegisterClick);\n      loginBtn.addEventListener('click', handleLoginClick);\n\n      // Cleanup\n      return () => {\n        registerBtn.removeEventListener('click', handleRegisterClick);\n        loginBtn.removeEventListener('click', handleLoginClick);\n      };\n    }\n  }, []);\n  const handleLogin = async event => {\n    // ... tu función de inicio de sesión existente ...\n  };\n\n  // Alternar entre la vista de inicio de sesión y registro\n  const toggleView = () => {\n    setShowRegisterView(!showRegisterView);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: showRegisterView ? \"Registro\" : \"Iniciar Sesión\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"container\",\n      children: showRegisterView ?\n      /*#__PURE__*/\n      // Vista de registro\n      _jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Vista de inicio de sesión\n      _jsxDEV(\"div\", {\n        className: \"form-container sign-in\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Usa tu correo electr\\xF3nico y contrase\\xF1a para iniciar sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            placeholder: \"Correo Electr\\xF3nico\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Ingresa tu contrase\\xF1a\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleView,\n            className: \"toggle-view\",\n            children: \"Registrarse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RA9JZoreZlrRpaUYeFC1iXeF+HQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Button","Footer","Register","handleRegisterClick","handleLoginClick","jsxDEV","_jsxDEV","Input","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","email","setEmail","password","setPassword","showRegisterView","setShowRegisterView","container","document","getElementById","registerBtn","loginBtn","classList","add","remove","addEventListener","removeEventListener","handleLogin","event","toggleView","children","title","className","id","onSubmit","e","target","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/javie/OneDrive/Documentos/GitHub/LOGIN/Ingenieria-de-Software-/reactjs/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Button from './components/Button';\r\nimport Footer from './components/Footer';\r\nimport Register from './Register';\r\nimport { handleRegisterClick, handleLoginClick } from './ContainerActions'; \r\n\r\n// Custom Input Component\r\nconst Input = ({ type, placeholder, value, onChange }) => (\r\n  <input type={type} placeholder={placeholder} value={value} onChange={onChange} />\r\n);\r\n\r\nfunction App() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showRegisterView, setShowRegisterView] = useState(false);\r\n\r\n useEffect(() => {\r\n    const container = document.getElementById('container');\r\n    const registerBtn = document.getElementById('register');\r\n    const loginBtn = document.getElementById('login');\r\n\r\n    if (container && registerBtn && loginBtn) {\r\n        const handleRegisterClick = () => {\r\n            container.classList.add(\"active\");\r\n        };\r\n\r\n        const handleLoginClick = () => {\r\n            container.classList.remove(\"active\");\r\n        };\r\n\r\n        registerBtn.addEventListener('click', handleRegisterClick);\r\n        loginBtn.addEventListener('click', handleLoginClick);\r\n\r\n        // Cleanup\r\n        return () => {\r\n            registerBtn.removeEventListener('click', handleRegisterClick);\r\n            loginBtn.removeEventListener('click', handleLoginClick);\r\n        };\r\n    }\r\n}, []);\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    // ... tu función de inicio de sesión existente ...\r\n  };\r\n\r\n  // Alternar entre la vista de inicio de sesión y registro\r\n  const toggleView = () => {\r\n    setShowRegisterView(!showRegisterView);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title={showRegisterView ? \"Registro\" : \"Iniciar Sesión\"} />\r\n      <div className='container' id='container'>\r\n        {showRegisterView ? (\r\n          // Vista de registro\r\n          <Register />\r\n        ) : (\r\n          // Vista de inicio de sesión\r\n          <div className='form-container sign-in'>\r\n            <form onSubmit={handleLogin}>\r\n              <span>Usa tu correo electrónico y contraseña para iniciar sesión</span>\r\n              <Input type=\"email\" placeholder=\"Correo Electrónico\" value={email} onChange={e => setEmail(e.target.value)} />\r\n              <Input type=\"password\" placeholder=\"Ingresa tu contraseña\" value={password} onChange={e => setPassword(e.target.value)} />\r\n              <Button type=\"submit\">Iniciar Sesión</Button>\r\n              <button onClick={toggleView} className=\"toggle-view\">Registrarse</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}